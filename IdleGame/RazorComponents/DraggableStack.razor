@inject IJSRuntime JSRuntime
@using System.Reflection
@using System.Text
@using System.Timers;

<style>
    .draggable-item {
        color: navy;

    }
    .draggable-item:hover {
        color: red;
        background-color: #9fc7aa !important;
    }
      
</style>

<ul class="list-group">
    @foreach (var item in Units)
    {
        <li draggable="true" id ="@(id)"
            class="list-group-item draggable-item"
            style="background-color: #d4f0dc;">
            @item
        </li>
    }
</ul>   

@code {
     [Parameter]
    public object? Battalions { get; set; }

    private List<string> Units = new();
    
    int id = 0;

    protected override void OnInitialized() {
        PopulateItems();
    }

    private void PopulateItems() {
        int id = 1;
        foreach (PropertyInfo unit in Battalions.GetType().GetProperties()) {
            var unitCount = unit.GetValue(Battalions);
            if (unitCount != null) {
                var unitProperty = unitCount.GetType().GetProperty("Unit");
                var countProperty = unitCount.GetType().GetProperty("Count");
                if (unitProperty != null) {
                    var unitInstance = unitProperty.GetValue(unitCount);
                    var numUnits = (int)countProperty.GetValue(unitCount);
                    var nameProperty = unitInstance.GetType().GetProperty("Name");
                    var unitName = nameProperty?.GetValue(unitInstance)?.ToString();
                    if (numUnits > 0) {
                        Units.Add(unitName);
                        id++;
                    }
                }
            }
        }
    }
}

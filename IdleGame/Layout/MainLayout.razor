@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject GlobalSave GlobalSave

@using Models.Battalions
@using Models.GlobalVariables;
@using Models.SaveState;

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <div style = "border-right: 1px solid black;">@($"Wizards: {numWizards} ")
                &nbsp; <br>
                @($"Warriors: {numWarriors} ")&nbsp;<br>
                @($"Rangers: {numRangers} ")&nbsp;</div>
            <div>
                &nbsp;@($"Archmages: {numArchmages} ") <br>
                &nbsp;@($"Cavalry: {numCavalry} ")<br>
                &nbsp;@($"Cannoneers: {numCannoneers} ")</div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    int? numWizards = 0;
    int? numWarriors = 0;
    int? numRangers = 0;
    int? numArchmages = 0;
    int? numCavalry = 0;
    int? numCannoneers = 0;


    protected override async Task OnInitializedAsync() {

        // Delay this task by 1 millisecond to allow the globalsave to be populated
        await Task.Delay(1);
        GlobalSave.OnPlayerUnitsChanged += UpdatePlayerUnits;
        LoadPlayerUnits();
    }

    private void LoadPlayerUnits(){
        numWizards = GlobalSave.NewSave.PlayerUnits.Wizards.Count;
        numWarriors = GlobalSave.NewSave.PlayerUnits.Warriors.Count;
        numRangers = GlobalSave.NewSave.PlayerUnits.Rangers.Count; 
        numArchmages = GlobalSave.NewSave.PlayerUnits.Archmages.Count;
        numCavalry = GlobalSave.NewSave.PlayerUnits.Cavalry.Count;
        numCannoneers = GlobalSave.NewSave.PlayerUnits.Cannoneers.Count;
    }

    private void UpdatePlayerUnits() {
        LoadPlayerUnits();
        InvokeAsync(StateHasChanged);
    }
}  